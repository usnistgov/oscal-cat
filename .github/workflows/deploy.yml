name: OSCAL CAT CD
env:
  DEPLOY_AUTOCOMMIT_PATHSPEC: "demos/cat"
  DEPLOY_REPO: usnistgov/oscal-tools
  DEPLOY_REPO_CHECKOUT_PATH: deploy
  DEPLOY_REPO_GIT_REF: nist-pages
  MAIN_REPO_CHECKOUT_PATH: main
on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
  workflow_call:
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires the access_token to be passed'
        required: false
        default: false
        type: boolean
    secrets:
      access_token:
        description: 'the access token to use for commits'
        required: false
  workflow_dispatch:
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires the access_token to be passed'
        required: false
        default: false
        type: boolean
      access_token:
        description: 'the access token to use for commits'
        required: false
        type: string
jobs:
  build-test-app:
    name: Deploy Demo Site
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout App Repo
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      with:
        path: ${{ github.workspace }}/${{ env.MAIN_REPO_CHECKOUT_PATH }}
        fetch-depth: 0
      id: checkout-main-repo
    - name: Checkout Target Deployment Repo (using commit_token)
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      if: github.event_name == 'push' && inputs.commit_resources == true
      with:
        repository: ${{ env.DEPLOY_REPO }}
        fetch-depth: 0
        ref: ${{ env.DEPLOY_REPO_GIT_REF }}
        path: ${{ github.workspace }}/${{ env.DEPLOY_REPO_CHECKOUT_PATH }}
        token: ${{ secrets.access_token || inputs.access_token }}
      id: checkout-deploy-repo-commit-token
    - name: Checkout Target Deployment Repo
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      # If not commiting resources, like above, checkout deploy repo w/o token
      # as we are not committing and push back updated changes.
      if: steps.checkout-deploy-repo-commit-token.conclusion == 'skipped'
      with:
        repository: ${{ env.DEPLOY_REPO }}
        fetch-depth: 0
        ref: ${{ env.DEPLOY_REPO_GIT_REF }}
        path: ${{ github.workspace }}/${{ env.DEPLOY_REPO_CHECKOUT_PATH }}
      id: checkout-deploy-repo-no-commit-token
    - name: Set up NodeJS
      uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
      with:
        node-version-file: '${{ env.MAIN_REPO_CHECKOUT_PATH }}/OSCAL-CAT-App/.nvmrc'
        cache: 'npm'
        cache-dependency-path: '${{ env.MAIN_REPO_CHECKOUT_PATH }}/OSCAL-CAT-App/package-lock.json'
      id: setup-nodejs
    - name: Build
      run: |
        cd "${MAIN_REPO_CHECKOUT_PATH}/OSCAL-CAT-App"
        npm ci
        echo "$PWD/node_modules/.bin/" >> $GITHUB_PATH
        npm run build -- \
          --base-href $BASE_HREF \
          --deploy-url $DEPLOY_URL
      id: build
    - name: Delete Old Deployment Files
      run: |
        # In case this is a fresh first-time build, recreate dir
        mkdir -p "${DEPLOY_AUTOCOMMIT_PATHSPEC}"
        git rm -rf "${DEPLOY_AUTOCOMMIT_PATHSPEC}"
      working-directory: ${{ env.DEPLOY_REPO_CHECKOUT_PATH }}
      id: clean-delete-old-build-target
    - name: Copy Build to Deploy Repo
      run: |
        cp -r . "../../../${DEPLOY_REPO_CHECKOUT_PATH}/${DEPLOY_AUTOCOMMIT_PATHSPEC}"
      working-directory: ${{ env.MAIN_REPO_CHECKOUT_PATH }}/OSCAL-CAT-App/www
      id: copy-build-deploy-target
    - name: Stage Updated Files for git
      run: |
        git add "${DEPLOY_AUTOCOMMIT_PATHSPEC}"
        git status
      working-directory: ${{ env.DEPLOY_REPO_CHECKOUT_PATH }}
      id: stage-files-deploy-target
    - name: Zip Website Build for Upload
      run: |
        pushd "${GITHUB_WORKSPACE}"
        zip ${{ runner.temp }}/oscal-tools_website.zip -r "${DEPLOY_REPO_CHECKOUT_PATH}"
        popd
      id: zip-website-build
    - name: Upload Website Snapshot for Debugging
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
      with:
        name: website
        path: |
          ${{ runner.temp }}/oscal-tools_website.zip
        retention-days: 5
      id: upload-website-build
    - name: Publish Generated Pages
      uses: stefanzweifel/git-auto-commit-action@49620cd3ed21ee620a48530e81dba0d139c9cb80
      # Only push if commit_resources flag is true and on main branch, ignore PRs until merged.
      if: inputs.commit_resources == true && github.ref_name == 'main'
      with:
        repository: ${{ env.DEPLOY_REPO_CHECKOUT_PATH }}
        branch: ${{ env.DEPLOY_REPO_GIT_REF }}
        file_pattern: '${{ env.DEPLOY_AUTOCOMMIT_PATHSPEC }}'
        skip_dirty_check: false
        commit_message: Pushing generated oscal-cat application [ci skip]
      id: finalize-deployment
